////////////////
// zLang Demo //
////////////////

// standard functions
def identity(x) = x
def composition(f, g) = lambda(x) f( g(x) )

// list
def first(x) = get(x, 0)

def map(x, f) = ifelse(len(x) == 0, [],
                  ifelse(len(x) == 1, [f(first(x))],
                     join([f(first(x))], map(tail(x),f))))

//def filter(x, f) = ifelse(len(x) == 0, [],
//                     ifelse(f(first(x)), join([first(x)], filter(tail(x), f)),
//                        filter(tail(x), f)))

def caseCond(c, v) = c
def caseVal(c, v) = v

def case(x) = ifelse(caseCond(x), caseVal(x), caseVal(x))

def m = map([1, 2, 3], lambda(x) x * 2)

//def test(x) = [first([x])]
def test(x) = get([x], 0)

def test2 = get([1], 0)

// math
def fib(x) = ifelse( x < 2, 1, fib(x - 2) + fib(x - 1) )
def fac(x) = ifelse( x == 1, 1, x * fac(x - 1) )

